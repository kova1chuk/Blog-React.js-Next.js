{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport values from \"lodash/values\";\nimport { SET_RETRIEVE_POST, ADD_COMMENT } from \"./types\"; // import Actions from \"store/posts/actions\";\n\nvar initialState = {\n  post: null\n};\nexport var retrievePostReducer = function retrievePostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_RETRIEVE_POST:\n      return {\n        post: action.payload\n      };\n\n    case ADD_COMMENT:\n      var comments = [].concat(_toConsumableArray(values(state.post.comments)), [action.payload]);\n      return {\n        post: _objectSpread({}, state.post, {\n          comments: comments\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/store/retrievePost/reducer.ts"],"names":["initialState","post","retrievePostReducer","state","action","payload","comments","values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,MAAA,MAAA,eAAA;AACA,SAAA,iBAAA,EAAA,WAAA,QAAA,SAAA,C,CAOA;;AAEA,IAAMA,YAAgC,GAAG;AACvCC,EAAAA,IAAI,EAAE;AADiC,CAAzC;AAIA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAGV;AAAA,MAFvBC,KAEuB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAFfH,YAEe;AAAA,MADvBI,MACuB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;;AACvB,UAAQA,MAAM,CAAd,IAAA;AACE,SAAA,iBAAA;AACE,aAAO;AACLH,QAAAA,IAAI,EAAEG,MAAM,CAACC;AADR,OAAP;;AAGF,SAAA,WAAA;AACE,UAAMC,QAAoB,GAAA,GAAA,MAAA,CAAA,kBAAA,CACrBC,MAAM,CAACJ,KAAK,CAALA,IAAAA,CADc,QACf,CADe,CAAA,EAAA,CAExBC,MAAM,CAFR,OAA0B,CAAA,CAA1B;AAKA,aAAO;AACLH,QAAAA,IAAI,EAAA,aAAA,CAAA,EAAA,EACCE,KAAK,CADN,IAAA,EAAA;AAEFG,UAAAA,QAAQ,EAAEA;AAFR,SAAA;AADC,OAAP;;AAMF;AACE,aAAA,KAAA;AAlBJ;AAJK,CAAA","sourcesContent":["import values from \"lodash/values\";\nimport {\n  IRetrievePostState,\n  SET_RETRIEVE_POST,\n  ADD_COMMENT,\n  IRetrievePostActionTypes,\n} from \"./types\";\nimport { IComment } from \"interfaces\";\n// import Actions from \"store/posts/actions\";\n\nconst initialState: IRetrievePostState = {\n  post: null,\n};\n\nexport const retrievePostReducer = (\n  state = initialState,\n  action: IRetrievePostActionTypes\n): IRetrievePostState => {\n  switch (action.type) {\n    case SET_RETRIEVE_POST:\n      return {\n        post: action.payload,\n      };\n    case ADD_COMMENT:\n      const comments: IComment[] = [\n        ...values(state.post.comments),\n        action.payload,\n      ];\n\n      return {\n        post: {\n          ...state.post,\n          comments: comments,\n        },\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}