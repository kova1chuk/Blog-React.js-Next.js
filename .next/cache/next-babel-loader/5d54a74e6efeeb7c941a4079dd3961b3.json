{"ast":null,"code":"import { postApi, commentApi } from \"utils/api\";\nimport { SET_RETRIEVE_POST, ADD_COMMENT } from \"./types\";\nconst Actions = {\n  setRetrievePost: retrievePost => {\n    return {\n      type: SET_RETRIEVE_POST,\n      payload: retrievePost\n    };\n  },\n  addComment: comment => {\n    return {\n      type: ADD_COMMENT,\n      payload: comment\n    };\n  },\n  fetchRetrievePosts: postId => dispatch => {\n    return postApi.getRetrievePost(postId).then(({\n      data\n    }) => {\n      dispatch(Actions.setRetrievePost(data));\n      return Promise.resolve();\n    }).catch(err => console.log(err));\n  },\n  fetchCreateComment: (postId, body) => dispatch => {\n    commentApi.createComment(postId, body).then(response => {\n      const {\n        data\n      } = response;\n      dispatch(Actions.addComment(data));\n    });\n  }\n};\nexport default Actions;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/develops-today-test-task1/store/retrievePost/actions.ts"],"names":["postApi","commentApi","SET_RETRIEVE_POST","ADD_COMMENT","Actions","setRetrievePost","retrievePost","type","payload","addComment","comment","fetchRetrievePosts","postId","dispatch","getRetrievePost","then","data","Promise","resolve","catch","err","console","log","fetchCreateComment","body","createComment","response"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,WAApC;AAGA,SACEC,iBADF,EAGEC,WAHF,QAIO,SAJP;AAMA,MAAMC,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAGC,YAAD,IAA2D;AAC1E,WAAO;AACLC,MAAAA,IAAI,EAAEL,iBADD;AAELM,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID,GANa;AAOdG,EAAAA,UAAU,EAAGC,OAAD,IAAiD;AAC3D,WAAO;AACLH,MAAAA,IAAI,EAAEJ,WADD;AAELK,MAAAA,OAAO,EAAEE;AAFJ,KAAP;AAID,GAZa;AAadC,EAAAA,kBAAkB,EAAGC,MAAD,IAAaC,QAAD,IAA6B;AAC3D,WAAOb,OAAO,CACXc,eADI,CACYF,MADZ,EAEJG,IAFI,CAEC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBH,MAAAA,QAAQ,CAACT,OAAO,CAACC,eAAR,CAAuCW,IAAvC,CAAD,CAAR;AACA,aAAOC,OAAO,CAACC,OAAR,EAAP;AACD,KALI,EAMJC,KANI,CAMGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOD,GArBa;AAsBdG,EAAAA,kBAAkB,EAAE,CAACX,MAAD,EAASY,IAAT,KAAmBX,QAAD,IAAoB;AACxDZ,IAAAA,UAAU,CAACwB,aAAX,CAAyBb,MAAzB,EAAiCY,IAAjC,EAAuCT,IAAvC,CAA6CW,QAAD,IAAc;AACxD,YAAM;AAAEV,QAAAA;AAAF,UAAWU,QAAjB;AACAb,MAAAA,QAAQ,CAACT,OAAO,CAACK,UAAR,CAA6BO,IAA7B,CAAD,CAAR;AACD,KAHD;AAID;AA3Ba,CAAhB;AA8BA,eAAeZ,OAAf","sourcesContent":["import { postApi, commentApi } from \"utils/api\";\n\nimport { IRetrievePost, IComment } from \"interfaces\";\nimport {\n  SET_RETRIEVE_POST,\n  IRetrievePostActionTypes,\n  ADD_COMMENT,\n} from \"./types\";\n\nconst Actions = {\n  setRetrievePost: (retrievePost: IRetrievePost): IRetrievePostActionTypes => {\n    return {\n      type: SET_RETRIEVE_POST,\n      payload: retrievePost,\n    };\n  },\n  addComment: (comment: IComment): IRetrievePostActionTypes => {\n    return {\n      type: ADD_COMMENT,\n      payload: comment,\n    };\n  },\n  fetchRetrievePosts: (postId) => (dispatch): Promise<void> => {\n    return postApi\n      .getRetrievePost(postId)\n      .then(({ data }) => {\n        dispatch(Actions.setRetrievePost(<IRetrievePost>data));\n        return Promise.resolve();\n      })\n      .catch((err) => console.log(err));\n  },\n  fetchCreateComment: (postId, body) => (dispatch): void => {\n    commentApi.createComment(postId, body).then((response) => {\n      const { data } = response;\n      dispatch(Actions.addComment(<IComment>data));\n    });\n  },\n};\n\nexport default Actions;\n"]},"metadata":{},"sourceType":"module"}