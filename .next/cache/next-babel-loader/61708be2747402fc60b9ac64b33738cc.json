{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\n\nvar Posts = function Posts(_ref) {\n  var post = _ref.post,\n      fetchRetrievePosts = _ref.fetchRetrievePosts,\n      fetchDeletePost = _ref.fetchDeletePost;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      update = _useState[0],\n      setUpdate = _useState[1];\n\n  var _useState2 = useState(post ? post.title : \"\"),\n      updateTitle = _useState2[0],\n      setUpdateTitle = _useState2[1];\n\n  var _useState3 = useState(post ? post.body : \"\"),\n      updateBody = _useState3[0],\n      setUpdateBody = _useState3[1];\n\n  var postId = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId);\n  } // const { postId } = router.query;\n\n\n  var changeTitle = function changeTitle(event) {\n    setUpdateTitle(event.target.value);\n  };\n\n  var changeBody = function changeBody(event) {\n    setUpdateTitle(event.target.value);\n  };\n\n  var deletePost = function deletePost() {\n    fetchDeletePost(postId).then(function () {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return post && __jsx(\"div\", {\n    className: \"post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"post__body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(\"div\", {\n    className: \"post__edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, !update ? __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setUpdate(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Update\"), __jsx(\"button\", {\n    onClick: deletePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Delete\")) : __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"text\",\n    value: updateTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: updateBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Confirm\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setUpdate(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))), __jsx(\"div\", {\n    className: \"post__add-comment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"post__comments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, values(post.comments).map(function (comment) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, comment.body);\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var retrievePostReducer = _ref2.retrievePostReducer;\n  return {\n    post: retrievePostReducer.post\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchDeletePost: postActions.fetchDeletePost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx"],"names":["React","useState","useRouter","connect","values","retrievePostActions","postActions","Posts","post","fetchRetrievePosts","fetchDeletePost","router","update","setUpdate","title","updateTitle","setUpdateTitle","body","updateBody","setUpdateBody","postId","query","id","Number","changeTitle","event","target","value","changeBody","deletePost","then","alert","push","comments","map","comment","mapStateToProps","retrievePostReducer","mapDispatchToProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAGA,IAAMC,KAIJ,GAAG,SAJCA,KAID,OAAmD;AAAA,MAAhDC,IAAgD,QAAhDA,IAAgD;AAAA,MAA1CC,kBAA0C,QAA1CA,kBAA0C;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AACtD,MAAMC,MAAM,GAAGT,SAAS,EAAxB;;AADsD,kBAE1BD,QAAQ,CAAC,KAAD,CAFkB;AAAA,MAE/CW,MAF+C;AAAA,MAEvCC,SAFuC;;AAAA,mBAGhBZ,QAAQ,CAACO,IAAI,GAAGA,IAAI,CAACM,KAAR,GAAgB,EAArB,CAHQ;AAAA,MAG/CC,WAH+C;AAAA,MAGlCC,cAHkC;;AAAA,mBAIlBf,QAAQ,CAACO,IAAI,GAAGA,IAAI,CAACS,IAAR,GAAe,EAApB,CAJU;AAAA,MAI/CC,UAJ+C;AAAA,MAInCC,aAJmC;;AAKtD,MAAMC,MAAyB,GAAGT,MAAM,CAACU,KAAP,CAAaD,MAA/C;;AAEA,MAAI,CAACZ,IAAD,IAASA,IAAI,CAACc,EAAL,KAAYC,MAAM,CAACH,MAAD,CAA/B,EAAyC;AACvCX,IAAAA,kBAAkB,CAACE,MAAM,CAACU,KAAP,CAAaD,MAAd,CAAlB;AACD,GATqD,CAUtD;;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7BT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAW;AAC5BT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBnB,IAAAA,eAAe,CAACU,MAAD,CAAf,CAAwBU,IAAxB,CAA6B,YAAM;AACjCC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACApB,MAAAA,MAAM,CAACqB,IAAP,CAAY,GAAZ;AACD,KAHD;AAID,GALD;;AAOA,SACExB,IAAI,IACF;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAAI,CAACM,KAAnC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BN,IAAI,CAACS,IAAlC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACL,MAAD,GACC,4BACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,SAAS,CAAC,IAAD,CAAf;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAQ,IAAA,OAAO,EAAEgB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADD,GAMC,4BACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEd,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEG,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAML,SAAS,CAAC,KAAD,CAAf;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAPJ,CAHF,EAsBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EAuBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,MAAM,CAACI,IAAI,CAACyB,QAAN,CAAN,CAAsBC,GAAtB,CAA0B,UAACC,OAAD;AAAA,WACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAAClB,IAAZ,CADyB;AAAA,GAA1B,CADH,CAvBF,CAFJ;AAiCD,CAhED;;AAkEA,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,mBAAH,SAAGA,mBAAH;AAAA,SAA8B;AACpD7B,IAAAA,IAAI,EAAE6B,mBAAmB,CAAC7B;AAD0B,GAA9B;AAAA,CAAxB;;AAGA,IAAM8B,kBAAkB,GAAG;AACzB7B,EAAAA,kBAAkB,EAAEJ,mBAAmB,CAACI,kBADf;AAEzBC,EAAAA,eAAe,EAAEJ,WAAW,CAACI;AAFJ,CAA3B;AAKA,eAAeP,OAAO,CAACiC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C/B,KAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\n\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport { IRetrievePost } from \"interfaces\";\n\nconst Posts: React.FC<{\n  post: IRetrievePost;\n  fetchRetrievePosts: any;\n  fetchDeletePost: any;\n}> = ({ post, fetchRetrievePosts, fetchDeletePost }) => {\n  const router = useRouter();\n  const [update, setUpdate] = useState(false);\n  const [updateTitle, setUpdateTitle] = useState(post ? post.title : \"\");\n  const [updateBody, setUpdateBody] = useState(post ? post.body : \"\");\n  const postId: string | string[] = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId);\n  }\n  // const { postId } = router.query;\n\n  const changeTitle = (event) => {\n    setUpdateTitle(event.target.value);\n  };\n\n  const changeBody = (event) => {\n    setUpdateTitle(event.target.value);\n  };\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return (\n    post && (\n      <div className=\"post\">\n        <div className=\"post__title\">{post.title}</div>\n        <div className=\"post__body\">{post.body}</div>\n        <div className=\"post__edit\">\n          {!update ? (\n            <>\n              <button onClick={() => setUpdate(true)}>Update</button>\n              <button onClick={deletePost}>Delete</button>\n            </>\n          ) : (\n            <>\n              <input type=\"text\" value={updateTitle} />\n              <input type=\"text\" value={updateBody} />\n              <button\n              // onClick={updatePost}\n              >\n                Confirm\n              </button>\n              <button onClick={() => setUpdate(false)}>Cancel</button>\n            </>\n          )}\n        </div>\n        <div className=\"post__add-comment\"></div>\n        <div className=\"post__comments\">\n          {values(post.comments).map((comment) => (\n            <p>{comment.body}</p>\n          ))}\n        </div>\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = ({ retrievePostReducer }) => ({\n  post: retrievePostReducer.post,\n});\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchDeletePost: postActions.fetchDeletePost,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}