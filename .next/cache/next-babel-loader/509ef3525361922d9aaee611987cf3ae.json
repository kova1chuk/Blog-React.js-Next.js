{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { postApi } from \"utils/api\";\n\nvar Index = function Index() {\n  postApi.getListAllPost().then(function (_ref) {\n    var data = _ref.data;\n    return console.log(data);\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }, \"Welcome to Nexit.js!\");\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;\n\nIndex.getInitialProps = function _callee2(ctx) {\n  var props;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(postApi.getListAllPost());\n\n        case 2:\n          props = _context2.sent;\n          console.log(props);\n          return _context2.abrupt(\"return\", props);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/index.tsx"],"names":["Index","postApi","data","console","res","axios","props"],"mappings":";;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AAIA,SAAA,OAAA,QAAA,WAAA;;AAEA,IAAMA,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAC5BC,EAAAA,OAAO,CAAPA,cAAAA,GAAAA,IAAAA,CAA8B,UAAA,IAAA,EAAA;AAAA,QAAGC,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,WAAcC,OAAO,CAAPA,GAAAA,CAAd,IAAcA,CAAd;AAA9BF,GAAAA;AACA,SAAO,KAAA,CAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,CAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAP,sBAAO,CAAP;AAFF,CAAA;;AAKAD,KAAK,CAALA,eAAAA,GAAwB,SAAA,OAAA,GAAA;AAAA,MAAA,GAAA,EAAA,IAAA;AAAA,SAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,iBAAA,mBAAA,CAAA,KAAA,CAGJK,KAAK,CAALA,GAAAA,CAHI,8CAGJA,CAHI,CAAA;;AAAA,aAAA,CAAA;AAGhBD,UAAAA,GAHgB,GAAA,QAAA,CAAA,IAGhBA;AAHgB,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,iBAAA,mBAAA,CAAA,KAAA,CAIHA,GAAG,CAJA,IAAA,CAAA;;AAAA,aAAA,CAAA;AAIhBF,UAAAA,IAJgB,GAAA,QAAA,CAAA,IAIhBA;AAENC,UAAAA,OAAO,CAAPA,GAAAA,CAAAA,6BAAAA,MAAAA,CAAyCD,IAAI,CAA7CC,MAAAA,CAAAA;AANsB,iBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAQf;AACLD,YAAAA,IAAI,EAAEA;AADD,WARe,CAAA;;AAAA,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAxBF,CAAAA;;AAaA,eAAA,KAAA;;AAgBAA,KAAK,CAALA,eAAAA,GAAwB,SAAA,QAAA,CAAA,GAAA,EAAA;AAAA,MAAA,KAAA;AAAA,SAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,iBAAA,mBAAA,CAAA,KAAA,CACqBC,OAAO,CAD5B,cACqBA,EADrB,CAAA;;AAAA,aAAA,CAAA;AAChBK,UAAAA,KADgB,GAAA,SAAA,CAAA,IAChBA;AACNH,UAAAA,OAAO,CAAPA,GAAAA,CAAAA,KAAAA;AAFsB,iBAAA,SAAA,CAAA,MAAA,CAAA,QAAA,EAAA,KAAA,CAAA;;AAAA,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAxBH,CAAAA","sourcesContent":["import React from \"react\";\nimport { NextPage, NextPageContext } from \"next\";\nimport { AxiosResponse } from \"axios\";\n\nimport { postApi } from \"utils/api\";\n\nconst Index: NextPage = () => {\n  postApi.getListAllPost().then(({ data }) => console.log(data));\n  return <div>Welcome to Nexit.js!</div>;\n};\n\nIndex.getInitialProps = async function () {\n  // fetch('https://api.tvmaze.com/search/shows?q=batman')\n  // const data = await res.json()\n  const res = await axios.get(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.data;\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    data: data,\n  };\n};\n\nexport default Index;\n\ninterface IPost {\n  title: string;\n  id: number;\n  completed: boolean;\n}\n\ninterface IPosts {\n  [index: number]: IPost;\n}\n\ninterface Context extends NextPageContext {\n  // any modifications to the default context, e.g. query types\n}\n\nIndex.getInitialProps = async (ctx: Context) => {\n  const props: AxiosResponse<IPosts> = await postApi.getListAllPost();\n  console.log(props);\n  return props;\n};\n"]},"metadata":{},"sourceType":"module"}