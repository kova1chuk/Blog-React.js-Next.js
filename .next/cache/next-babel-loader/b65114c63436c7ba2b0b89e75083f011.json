{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport store from \"store\";\n\nconst Posts = ({\n  post,\n  fetchRetrievePosts,\n  fetchUpdatePost,\n  fetchDeletePost\n}) => {\n  const router = useRouter();\n  const {\n    0: update,\n    1: setUpdate\n  } = useState(false);\n  const {\n    0: updateTitle,\n    1: setUpdateTitle\n  } = useState(post ? post.title : \"\");\n  const {\n    0: updateBody,\n    1: setUpdateBody\n  } = useState(post ? post.body : \"\");\n  const postId = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId).then(() => {\n      setUpdateTitle(store.getState().retrievePostReducer.post.title);\n      setUpdateBody(store.getState().retrievePostReducer.post.body);\n    });\n  } // const { postId } = router.query;\n\n\n  const changeTitle = event => {\n    setUpdateTitle(event.target.value);\n  };\n\n  const changeBody = event => {\n    setUpdateBody(event.target.value);\n  };\n\n  const updatePost = () => {\n    fetchUpdatePost(postId, updateTitle, updateBody).then(() => {\n      fetchRetrievePosts(router.query.postId);\n    });\n  };\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return post && __jsx(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"post__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(\"div\", {\n    className: \"post__edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, !update ? __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: () => setUpdate(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Update\"), __jsx(\"button\", {\n    onClick: deletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Delete\")) : __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"text\",\n    value: updateTitle,\n    onChange: changeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: updateBody,\n    onChange: changeBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    onClick: updatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Confirm\"), __jsx(\"button\", {\n    onClick: () => setUpdate(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))), __jsx(\"div\", {\n    className: \"post__add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"post__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, values(post.comments).map(comment => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, comment.body))));\n};\n\nconst mapStateToProps = ({\n  retrievePostReducer\n}) => ({\n  post: retrievePostReducer.post\n});\n\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchUpdatePost: postActions.fetchUpdatePost,\n  fetchDeletePost: postActions.fetchDeletePost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx"],"names":["React","useState","useRouter","connect","values","retrievePostActions","postActions","store","Posts","post","fetchRetrievePosts","fetchUpdatePost","fetchDeletePost","router","update","setUpdate","updateTitle","setUpdateTitle","title","updateBody","setUpdateBody","body","postId","query","id","Number","then","getState","retrievePostReducer","changeTitle","event","target","value","changeBody","updatePost","deletePost","alert","push","comments","map","comment","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\n\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport { IRetrievePost } from \"interfaces\";\nimport store from \"store\";\n\nconst Posts: React.FC<{\n  post: IRetrievePost;\n  fetchRetrievePosts: any;\n  fetchUpdatePost: any;\n  fetchDeletePost: any;\n}> = ({ post, fetchRetrievePosts, fetchUpdatePost, fetchDeletePost }) => {\n  const router = useRouter();\n  const [update, setUpdate] = useState(false);\n  const [updateTitle, setUpdateTitle] = useState(post ? post.title : \"\");\n  const [updateBody, setUpdateBody] = useState(post ? post.body : \"\");\n  const postId: string | string[] = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId).then(() => {\n      setUpdateTitle(store.getState().retrievePostReducer.post.title);\n      setUpdateBody(store.getState().retrievePostReducer.post.body);\n    });\n  }\n  // const { postId } = router.query;\n\n  const changeTitle = (event) => {\n    setUpdateTitle(event.target.value);\n  };\n\n  const changeBody = (event) => {\n    setUpdateBody(event.target.value);\n  };\n\n  const updatePost = () => {\n    fetchUpdatePost(postId, updateTitle, updateBody).then(() => {\n      fetchRetrievePosts(router.query.postId);\n    });\n  };\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return (\n    post && (\n      <div className=\"post\">\n        <div className=\"post__title\">{post.title}</div>\n        <div className=\"post__body\">{post.body}</div>\n        <div className=\"post__edit\">\n          {!update ? (\n            <>\n              <button onClick={() => setUpdate(true)}>Update</button>\n              <button onClick={deletePost}>Delete</button>\n            </>\n          ) : (\n            <>\n              <input type=\"text\" value={updateTitle} onChange={changeTitle} />\n              <input type=\"text\" value={updateBody} onChange={changeBody} />\n              <button onClick={updatePost}>Confirm</button>\n              <button onClick={() => setUpdate(false)}>Cancel</button>\n            </>\n          )}\n        </div>\n        <div className=\"post__add-comment\"></div>\n        <div className=\"post__comments\">\n          {values(post.comments).map((comment) => (\n            <p>{comment.body}</p>\n          ))}\n        </div>\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = ({ retrievePostReducer }) => ({\n  post: retrievePostReducer.post,\n});\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchUpdatePost: postActions.fetchUpdatePost,\n  fetchDeletePost: postActions.fetchDeletePost,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}