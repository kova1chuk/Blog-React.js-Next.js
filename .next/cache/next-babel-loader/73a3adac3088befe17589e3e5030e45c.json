{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport UpdatePost from \"components/UpdatePost\";\n\nconst Posts = ({\n  post,\n  fetchRetrievePosts,\n  fetchUpdatePost,\n  fetchDeletePost\n}) => {\n  const router = useRouter();\n  const postId = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId).then(() => {});\n  } // const { postId } = router.query;\n\n\n  const updatePost = (postId, updateTitle, updateBody) => {\n    fetchUpdatePost(postId, updateTitle, updateBody).then(() => {\n      fetchRetrievePosts(router.query.postId);\n    });\n  };\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return post && __jsx(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"post__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(UpdatePost, {\n    post: post,\n    sendUpdate: updatePost,\n    sendDelete: deletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"post__add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"post__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, values(post.comments).map(comment => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, comment.body))));\n};\n\nconst mapStateToProps = ({\n  retrievePostReducer\n}) => ({\n  post: retrievePostReducer.post\n});\n\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchUpdatePost: postActions.fetchUpdatePost,\n  fetchDeletePost: postActions.fetchDeletePost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx"],"names":["React","useRouter","connect","values","retrievePostActions","postActions","UpdatePost","Posts","post","fetchRetrievePosts","fetchUpdatePost","fetchDeletePost","router","postId","query","id","Number","then","updatePost","updateTitle","updateBody","deletePost","alert","push","title","body","comments","map","comment","mapStateToProps","retrievePostReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\n\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport { IRetrievePost } from \"interfaces\";\nimport store from \"store\";\nimport UpdatePost from \"components/UpdatePost\";\n\nconst Posts: React.FC<{\n  post: IRetrievePost;\n  fetchRetrievePosts: any;\n  fetchUpdatePost: any;\n  fetchDeletePost: any;\n}> = ({ post, fetchRetrievePosts, fetchUpdatePost, fetchDeletePost }) => {\n  const router = useRouter();\n\n  const postId: string | string[] = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId).then(() => {});\n  }\n  // const { postId } = router.query;\n\n  const updatePost = (postId, updateTitle, updateBody) => {\n    fetchUpdatePost(postId, updateTitle, updateBody).then(() => {\n      fetchRetrievePosts(router.query.postId);\n    });\n  };\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return (\n    post && (\n      <div className=\"post\">\n        <div className=\"post__title\">{post.title}</div>\n        <div className=\"post__body\">{post.body}</div>\n        <UpdatePost\n          post={post}\n          sendUpdate={updatePost}\n          sendDelete={deletePost}\n        />\n        <div className=\"post__add-comment\"></div>\n        <div className=\"post__comments\">\n          {values(post.comments).map((comment) => (\n            <p>{comment.body}</p>\n          ))}\n        </div>\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = ({ retrievePostReducer }) => ({\n  post: retrievePostReducer.post,\n});\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchUpdatePost: postActions.fetchUpdatePost,\n  fetchDeletePost: postActions.fetchDeletePost,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}