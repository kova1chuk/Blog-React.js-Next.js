{"ast":null,"code":"import { postApi } from \"utils/api\";\nimport { CREATE_POST, UPDATE_POST, DELETE_POST, SET_POSTS } from \"./types\";\nvar Actions = {\n  createPost: function createPost(newPost) {\n    return {\n      type: CREATE_POST,\n      payload: newPost\n    };\n  },\n  updatePost: function updatePost(newPost) {\n    return {\n      type: UPDATE_POST,\n      payload: newPost\n    };\n  },\n  deletePost: function deletePost(postId) {\n    return {\n      type: DELETE_POST,\n      payload: {\n        id: postId\n      }\n    };\n  },\n  setPosts: function setPosts(posts) {\n    return {\n      type: SET_POSTS,\n      payload: posts\n    };\n  },\n  // fetchCreatePost: () => (dispatch) :void => {\n  // }\n  fetchPosts: function fetchPosts() {\n    return function (dispatch) {\n      postApi.getListAllPost().then(function (_ref) {\n        var data = _ref.data;\n        dispatch(Actions.setPosts(data));\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n  }\n};\nexport default Actions;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/store/posts/actions.ts"],"names":["postApi","CREATE_POST","UPDATE_POST","DELETE_POST","SET_POSTS","Actions","createPost","newPost","type","payload","updatePost","deletePost","postId","id","setPosts","posts","fetchPosts","dispatch","getListAllPost","then","data","err","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AAGA,SACEC,WADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,SAJF,QAMO,SANP;AAQA,IAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAACC,OAAD,EAAsC;AAChD,WAAO;AACLC,MAAAA,IAAI,EAAEP,WADD;AAELQ,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID,GANa;AAQdG,EAAAA,UAAU,EAAE,oBAACH,OAAD,EAAsC;AAChD,WAAO;AACLC,MAAAA,IAAI,EAAEN,WADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID,GAba;AAedI,EAAAA,UAAU,EAAE,oBAACC,MAAD,EAAsC;AAChD,WAAO;AACLJ,MAAAA,IAAI,EAAEL,WADD;AAELM,MAAAA,OAAO,EAAE;AAAEI,QAAAA,EAAE,EAAED;AAAN;AAFJ,KAAP;AAID,GApBa;AAsBdE,EAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAqC;AAC7C,WAAO;AACLP,MAAAA,IAAI,EAAEJ,SADD;AAELK,MAAAA,OAAO,EAAEM;AAFJ,KAAP;AAID,GA3Ba;AA6Bd;AAEA;AAEAC,EAAAA,UAAU,EAAE;AAAA,WAAM,UAACC,QAAD,EAAoB;AACpCjB,MAAAA,OAAO,CACJkB,cADH,GAEGC,IAFH,CAEQ,gBAAc;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAClBH,QAAAA,QAAQ,CAACZ,OAAO,CAACS,QAAR,CAAyBM,IAAzB,CAAD,CAAR;AACD,OAJH,WAKS,UAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OALT;AAMD,KAPW;AAAA;AAjCE,CAAhB;AA2CA,eAAehB,OAAf","sourcesContent":["import { postApi } from \"utils/api\";\n\nimport { IPosts, IPost } from \"interfaces\";\nimport {\n  CREATE_POST,\n  UPDATE_POST,\n  DELETE_POST,\n  SET_POSTS,\n  IPostActionTypes,\n} from \"./types\";\n\nconst Actions = {\n  createPost: (newPost: IPost): IPostActionTypes => {\n    return {\n      type: CREATE_POST,\n      payload: newPost,\n    };\n  },\n\n  updatePost: (newPost: IPost): IPostActionTypes => {\n    return {\n      type: UPDATE_POST,\n      payload: newPost,\n    };\n  },\n\n  deletePost: (postId: number): IPostActionTypes => {\n    return {\n      type: DELETE_POST,\n      payload: { id: postId },\n    };\n  },\n\n  setPosts: (posts: IPosts): IPostActionTypes => {\n    return {\n      type: SET_POSTS,\n      payload: posts,\n    };\n  },\n\n  // fetchCreatePost: () => (dispatch) :void => {\n\n  // }\n\n  fetchPosts: () => (dispatch): void => {\n    postApi\n      .getListAllPost()\n      .then(({ data }) => {\n        dispatch(Actions.setPosts(<IPosts>data));\n      })\n      .catch((err) => console.log(err));\n  },\n};\n\nexport default Actions;\n"]},"metadata":{},"sourceType":"module"}