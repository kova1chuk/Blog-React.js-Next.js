{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport store from \"store\";\n\nvar Posts = function Posts(_ref) {\n  var post = _ref.post,\n      fetchRetrievePosts = _ref.fetchRetrievePosts,\n      fetchDeletePost = _ref.fetchDeletePost;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      update = _useState[0],\n      setUpdate = _useState[1];\n\n  var postId = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId);\n  } else console.log(store.getState().retrievePostReducer.post.title); // const { postId } = router.query;\n\n\n  var deletePost = function deletePost() {\n    fetchDeletePost(postId).then(function () {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return post && __jsx(\"div\", {\n    className: \"post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"post__body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(\"div\", {\n    className: \"post__edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, !update ? __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setUpdate(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Update\"), __jsx(\"button\", {\n    onClick: deletePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Delete\")) : __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    // onClick={updatePost}\n    value: store.getState().retrievePostReducer.post.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Confirm\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setUpdate(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))), __jsx(\"div\", {\n    className: \"post__add-comment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"post__comments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, values(post.comments).map(function (comment) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, comment.body);\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var retrievePostReducer = _ref2.retrievePostReducer;\n  return {\n    post: retrievePostReducer.post\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchDeletePost: postActions.fetchDeletePost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx"],"names":["Posts","post","fetchRetrievePosts","fetchDeletePost","router","useRouter","update","setUpdate","useState","postId","Number","console","store","deletePost","alert","comment","mapStateToProps","retrievePostReducer","mapDispatchToProps","retrievePostActions","postActions","connect"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\n\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport { IRetrievePost } from \"interfaces\";\nimport store from \"store\";\n\nconst Posts: React.FC<{\n  post: IRetrievePost;\n  fetchRetrievePosts: any;\n  fetchDeletePost: any;\n}> = ({ post, fetchRetrievePosts, fetchDeletePost }) => {\n  const router = useRouter();\n  const [update, setUpdate] = useState(false);\n  const postId: string | string[] = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId);\n  } else console.log(store.getState().retrievePostReducer.post.title);\n  // const { postId } = router.query;\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return (\n    post && (\n      <div className=\"post\">\n        <div className=\"post__title\">{post.title}</div>\n        <div className=\"post__body\">{post.body}</div>\n        <div className=\"post__edit\">\n          {!update ? (\n            <>\n              <button onClick={() => setUpdate(true)}>Update</button>\n              <button onClick={deletePost}>Delete</button>\n            </>\n          ) : (\n            <>\n              <input type=\"text\" />\n              <input type=\"text\" />\n              <button\n                // onClick={updatePost}\n                value={store.getState().retrievePostReducer.post.title}\n              >\n                Confirm\n              </button>\n              <button onClick={() => setUpdate(false)}>Cancel</button>\n            </>\n          )}\n        </div>\n        <div className=\"post__add-comment\"></div>\n        <div className=\"post__comments\">\n          {values(post.comments).map((comment) => (\n            <p>{comment.body}</p>\n          ))}\n        </div>\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = ({ retrievePostReducer }) => ({\n  post: retrievePostReducer.post,\n});\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchDeletePost: postActions.fetchDeletePost,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}