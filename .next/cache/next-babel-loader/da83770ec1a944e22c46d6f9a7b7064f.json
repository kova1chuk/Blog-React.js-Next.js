{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { postApi } from \"utils/api\";\n\nvar Index = function Index() {\n  postApi.getListAllPost().then(function (_ref) {\n    var data = _ref.data;\n    return console.log(data);\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, \"Welcome to Nexit.js!\");\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;\n\nIndex.getInitialProps = function _callee2(ctx) {\n  var props;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(postApi.getListAllPost());\n\n        case 2:\n          props = _context2.sent;\n          console.log(props);\n          return _context2.abrupt(\"return\", props);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/index.tsx"],"names":["React","postApi","Index","getListAllPost","then","data","console","log","getInitialProps","axios","get","res","length","ctx","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAC5BD,EAAAA,OAAO,CAACE,cAAR,GAAyBC,IAAzB,CAA8B;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAcC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAd;AAAA,GAA9B;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,CAHD;;AAKAH,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGJC,KAAK,CAACC,GAAN,CAAU,8CAAV,CAHI;;AAAA;AAGhBC,UAAAA,GAHgB;AAAA;AAAA,2CAIHA,GAAG,CAACN,IAJD;;AAAA;AAIhBA,UAAAA,IAJgB;AAMtBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACO,MAA9C;AANsB,2CAQf;AACLP,YAAAA,IAAI,EAAEA;AADD,WARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaA,eAAeH,KAAf;;AAkBAA,KAAK,CAACM,eAAN,GAAwB,kBAAOK,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACMZ,OAAO,CAACE,cAAR,EADN;;AAAA;AAChBW,UAAAA,KADgB;AAEtBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAFsB,4CAGfA,KAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import React from \"react\";\nimport { nextPage } from \"next\";\n\nimport { postApi } from \"utils/api\";\n\nconst Index: NextPage = () => {\n  postApi.getListAllPost().then(({ data }) => console.log(data));\n  return <div>Welcome to Nexit.js!</div>;\n};\n\nIndex.getInitialProps = async function () {\n  // fetch('https://api.tvmaze.com/search/shows?q=batman')\n  // const data = await res.json()\n  const res = await axios.get(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.data;\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    data: data,\n  };\n};\n\nexport default Index;\n\nimport { NextPage, NextPageContext } from \"next\";\n\ninterface IPosts {\n  title: string;\n  id: number;\n  completed: boolean;\n}\n\n// const index: NextPage<IPosts> = props => (\n//   // ...\n// )\n\ninterface Context extends NextPageContext {\n  // any modifications to the default context, e.g. query types\n}\n\nIndex.getInitialProps = async (ctx: Context) => {\n  const props: IPosts = await postApi.getListAllPost();\n  console.log(props);\n  return props;\n};\n"]},"metadata":{},"sourceType":"module"}