{"ast":null,"code":"import { postApi, commentApi } from \"utils/api\";\nimport { SET_RETRIEVE_POST, ADD_COMMENT } from \"./types\";\nvar Actions = {\n  setRetrievePost: function setRetrievePost(retrievePost) {\n    return {\n      type: SET_RETRIEVE_POST,\n      payload: retrievePost\n    };\n  },\n  addComment: function addComment(comment) {\n    return {\n      type: ADD_COMMENT,\n      payload: comment\n    };\n  },\n  fetchRetrievePosts: function fetchRetrievePosts(postId) {\n    return function (dispatch) {\n      return postApi.getRetrievePost(postId).then(function (_ref) {\n        var data = _ref.data;\n        dispatch(Actions.setRetrievePost(data));\n        return Promise.resolve();\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n  },\n  fetchCreateComment: function fetchCreateComment(postId, body) {\n    return function (dispatch) {\n      commentApi.createComment(postId, body).then(function (response) {\n        var data = response.data;\n        dispatch(Actions.addComment(data));\n      });\n    };\n  }\n};\nexport default Actions;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/store/retrievePost/actions.ts"],"names":["Actions","setRetrievePost","type","payload","retrievePost","addComment","comment","fetchRetrievePosts","data","dispatch","Promise","console","fetchCreateComment","commentApi","response"],"mappings":"AAAA,SAAA,OAAA,EAAA,UAAA,QAAA,WAAA;AAGA,SAAA,iBAAA,EAAA,WAAA,QAAA,SAAA;AAMA,IAAMA,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,YAAA,EAA2D;AAC1E,WAAO;AACLC,MAAAA,IAAI,EADC,iBAAA;AAELC,MAAAA,OAAO,EAAEC;AAFJ,KAAP;AAFY,GAAA;AAOdC,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,OAAA,EAAiD;AAC3D,WAAO;AACLH,MAAAA,IAAI,EADC,WAAA;AAELC,MAAAA,OAAO,EAAEG;AAFJ,KAAP;AARY,GAAA;AAadC,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,CAAA,MAAA,EAAA;AAAA,WAAY,UAAA,QAAA,EAA6B;AAC3D,aAAO,OAAO,CAAP,eAAA,CAAA,MAAA,EAAA,IAAA,CAEC,UAAA,IAAA,EAAc;AAAA,YAAXC,IAAW,GAAA,IAAA,CAAXA,IAAW;AAClBC,QAAAA,QAAQ,CAACT,OAAO,CAAPA,eAAAA,CAATS,IAAST,CAAD,CAARS;AACA,eAAOC,OAAO,CAAd,OAAOA,EAAP;AAJG,OAAA,EAAA,OAAA,EAME,UAAA,GAAA,EAAA;AAAA,eAASC,OAAO,CAAPA,GAAAA,CAAT,GAASA,CAAT;AANT,OAAO,CAAP;AADkB,KAAA;AAbN,GAAA;AAsBdC,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,CAAA,MAAA,EAAA,IAAA,EAAA;AAAA,WAAkB,UAAA,QAAA,EAAoB;AACxDC,MAAAA,UAAU,CAAVA,aAAAA,CAAAA,MAAAA,EAAAA,IAAAA,EAAAA,IAAAA,CAA4C,UAAA,QAAA,EAAc;AAAA,YAChDL,IADgD,GACvCM,QADuC,CAAA,IAAA;AAExDL,QAAAA,QAAQ,CAACT,OAAO,CAAPA,UAAAA,CAATS,IAAST,CAAD,CAARS;AAFFI,OAAAA;AADkB,KAAA;AAAA;AAtBN,CAAhB;AA8BA,eAAA,OAAA","sourcesContent":["import { postApi, commentApi } from \"utils/api\";\n\nimport { IRetrievePost, IComment } from \"interfaces\";\nimport {\n  SET_RETRIEVE_POST,\n  IRetrievePostActionTypes,\n  ADD_COMMENT,\n} from \"./types\";\n\nconst Actions = {\n  setRetrievePost: (retrievePost: IRetrievePost): IRetrievePostActionTypes => {\n    return {\n      type: SET_RETRIEVE_POST,\n      payload: retrievePost,\n    };\n  },\n  addComment: (comment: IComment): IRetrievePostActionTypes => {\n    return {\n      type: ADD_COMMENT,\n      payload: comment,\n    };\n  },\n  fetchRetrievePosts: (postId) => (dispatch): Promise<void> => {\n    return postApi\n      .getRetrievePost(postId)\n      .then(({ data }) => {\n        dispatch(Actions.setRetrievePost(<IRetrievePost>data));\n        return Promise.resolve();\n      })\n      .catch((err) => console.log(err));\n  },\n  fetchCreateComment: (postId, body) => (dispatch): void => {\n    commentApi.createComment(postId, body).then((response) => {\n      const { data } = response;\n      dispatch(Actions.addComment(<IComment>data));\n    });\n  },\n};\n\nexport default Actions;\n"]},"metadata":{},"sourceType":"module"}