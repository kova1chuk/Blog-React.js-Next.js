{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\n\nconst Posts = ({\n  post,\n  fetchRetrievePosts,\n  fetchDeletePost\n}) => {\n  const router = useRouter();\n  const {\n    0: update,\n    1: setUpdate\n  } = useState(false);\n  const postId = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId);\n  } // const { postId } = router.query;\n\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return post && __jsx(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"post__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(\"div\", {\n    className: \"post__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(\"div\", {\n    className: \"post__edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Update\"), __jsx(\"button\", {\n    onClick: deletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Delete\")), __jsx(\"div\", {\n    className: \"post__add-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"post__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, values(post.comments).map(comment => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, comment.body))));\n};\n\nconst mapStateToProps = ({\n  retrievePostReducer\n}) => ({\n  post: retrievePostReducer.post\n});\n\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchDeletePost: postActions.fetchDeletePost\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/DevelopsTodayTestTask/pages/posts/[postId].tsx"],"names":["React","useState","useRouter","connect","values","retrievePostActions","postActions","Posts","post","fetchRetrievePosts","fetchDeletePost","router","update","setUpdate","postId","query","id","Number","deletePost","then","alert","push","title","body","comments","map","comment","mapStateToProps","retrievePostReducer","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAGA,MAAMC,KAIJ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,kBAAR;AAA4BC,EAAAA;AAA5B,CAAD,KAAmD;AACtD,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMa,MAAyB,GAAGH,MAAM,CAACI,KAAP,CAAaD,MAA/C;;AAEA,MAAI,CAACN,IAAD,IAASA,IAAI,CAACQ,EAAL,KAAYC,MAAM,CAACH,MAAD,CAA/B,EAAyC;AACvCL,IAAAA,kBAAkB,CAACE,MAAM,CAACI,KAAP,CAAaD,MAAd,CAAlB;AACD,GAPqD,CAStD;;;AAEA,QAAMI,UAAU,GAAG,MAAM;AACvBR,IAAAA,eAAe,CAACI,MAAD,CAAf,CAAwBK,IAAxB,CAA6B,MAAM;AACjCC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD,KAHD;AAID,GALD;;AAOA,SACEb,IAAI,IACF;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAAI,CAACc,KAAnC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Bd,IAAI,CAACe,IAAlC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAQ,IAAA,OAAO,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAHF,EAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,MAAM,CAACI,IAAI,CAACgB,QAAN,CAAN,CAAsBC,GAAtB,CAA2BC,OAAD,IACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAO,CAACH,IAAZ,CADD,CADH,CARF,CAFJ;AAkBD,CAxCD;;AA0CA,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAA8B;AACpDpB,EAAAA,IAAI,EAAEoB,mBAAmB,CAACpB;AAD0B,CAA9B,CAAxB;;AAGA,MAAMqB,kBAAkB,GAAG;AACzBpB,EAAAA,kBAAkB,EAAEJ,mBAAmB,CAACI,kBADf;AAEzBC,EAAAA,eAAe,EAAEJ,WAAW,CAACI;AAFJ,CAA3B;AAKA,eAAeP,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport values from \"lodash/values\";\n\nimport retrievePostActions from \"store/retrievePost/actions\";\nimport postActions from \"store/posts/actions\";\nimport { IRetrievePost } from \"interfaces\";\n\nconst Posts: React.FC<{\n  post: IRetrievePost;\n  fetchRetrievePosts: any;\n  fetchDeletePost: any;\n}> = ({ post, fetchRetrievePosts, fetchDeletePost }) => {\n  const router = useRouter();\n  const [update, setUpdate] = useState(false);\n  const postId: string | string[] = router.query.postId;\n\n  if (!post || post.id !== Number(postId)) {\n    fetchRetrievePosts(router.query.postId);\n  }\n\n  // const { postId } = router.query;\n\n  const deletePost = () => {\n    fetchDeletePost(postId).then(() => {\n      alert(\"Post deleted!\");\n      router.push(\"/\");\n    });\n  };\n\n  return (\n    post && (\n      <div className=\"post\">\n        <div className=\"post__title\">{post.title}</div>\n        <div className=\"post__body\">{post.body}</div>\n        <div className=\"post__edit\">\n          <button>Update</button>\n          <button onClick={deletePost}>Delete</button>\n        </div>\n        <div className=\"post__add-comment\"></div>\n        <div className=\"post__comments\">\n          {values(post.comments).map((comment) => (\n            <p>{comment.body}</p>\n          ))}\n        </div>\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = ({ retrievePostReducer }) => ({\n  post: retrievePostReducer.post,\n});\nconst mapDispatchToProps = {\n  fetchRetrievePosts: retrievePostActions.fetchRetrievePosts,\n  fetchDeletePost: postActions.fetchDeletePost,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}